[project]
name = "nba-bets-backend"
version = "0.1.0"
description = "NBA Bets Tracking Backend API"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.118.0",
    "uvicorn>=0.37.0",
    "sqlmodel>=0.0.25",
    "asyncpg>=0.30.0",
    "alembic>=1.16.5",
    "python-multipart>=0.0.9",
    "pydantic-settings>=2.5.0",
    "httpx>=0.25.2",
    "python-dotenv>=1.0.0",
    "gunicorn>=22.0.0",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
# Plus: bugbear (`B`), complexity (`C`), isort (`I`), and more
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "B",   # flake8-bugbear
    "C",   # McCabe complexity
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "S",   # flake8-bandit
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # Pylint
    "RUF", # Ruff-specific rules
]

ignore = [
    "E501",   # line-too-long (handled by black)
    "B008",   # do not perform function calls in argument defaults
    "S101",   # use of assert detected
    "PLR0913", # too-many-arguments
    "COM812", # trailing-comma-missing (conflicts with formatter)
    "Q000",   # bad-quotes-inline-string (handled by formatter)
]

fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR2004", "S106", "ARG001", "ARG002", "PLC0415"]  # Allow unused args and imports in tests
"scripts/*" = ["T201", "F541", "RUF001"]  # Allow print statements and f-strings in scripts
"alembic/*" = ["F401", "E402", "W291", "W292"]  # Allow unused imports, non-top-level imports, and whitespace issues in migrations
"app/core/config.py" = ["RUF012"]  # Allow mutable class attributes without ClassVar for Config
"app/models/*" = ["A003"]  # Allow shadowing builtins like 'id' in SQLModel models

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
addopts = "-ra -v --cov=app --cov-report term-missing"
asyncio_mode = "auto"
filterwarnings = [
    "ignore:'crypt' is deprecated and slated for removal"
]
markers = ["pytest.mark.asyncio"]
minversion = "6.0"
testpaths = ["tests"]

[tool.coverage.run]
omit = ["*/tests/*", "*/__init__.py"]
concurrency = ["thread"]

[dependency-groups]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "ruff>=0.13.3",
    "black>=23.11.0",
    "pre-commit>=3.5.0",
    "autoflake>=2.2.1",
    "aiosqlite>=0.21.0",
    "greenlet>=3.0.0",
    "ty==0.0.1a21",
    "yamllint>=1.35.0",
    "bandit>=1.7.5",
    "safety>=3.0.0",
]
