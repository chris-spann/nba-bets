"""Unify player and team bets into single bets table

Revision ID: 013bb0e20ef8
Revises:
Create Date: 2025-10-07 23:40:22.052903

"""

import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "013bb0e20ef8"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "bet_type",
            sa.Enum(
                "PLAYER_PROP", "TEAM_PROP", "GAME_TOTAL", "SPREAD", "MONEYLINE", name="bettype"
            ),
            nullable=False,
        ),
        sa.Column("bet_placed_date", sa.DateTime(), nullable=False),
        sa.Column("game_date", sa.DateTime(), nullable=False),
        sa.Column("team", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("opponent", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("wager_amount", sa.Numeric(scale=2), nullable=False),
        sa.Column("odds", sa.Integer(), nullable=False),
        sa.Column(
            "result",
            sa.Enum("WIN", "LOSS", "PUSH", "PENDING", "CANCELLED", name="betresult"),
            nullable=False,
        ),
        sa.Column("payout", sa.Numeric(scale=2), nullable=True),
        sa.Column("notes", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("player_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "prop_type",
            sa.Enum(
                "POINTS",
                "REBOUNDS",
                "ASSISTS",
                "THREE_POINTERS",
                "STEALS",
                "BLOCKS",
                "TURNOVERS",
                "FIELD_GOALS_MADE",
                "FREE_THROWS_MADE",
                "DOUBLE_DOUBLE",
                "TRIPLE_DOUBLE",
                name="proptype",
            ),
            nullable=True,
        ),
        sa.Column("prop_line", sa.Numeric(scale=1), nullable=True),
        sa.Column("over_under", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("prop_description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("actual_value", sa.Numeric(scale=1), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    # Drop old tables if they exist
    op.execute("DROP TABLE IF EXISTS player_bets CASCADE")
    op.execute("DROP TABLE IF EXISTS team_bets CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "team_bets",
        sa.Column(
            "bet_type",
            postgresql.ENUM(
                "PLAYER_PROP", "TEAM_PROP", "GAME_TOTAL", "SPREAD", "MONEYLINE", name="bettype"
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("game_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("team", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("opponent", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("wager_amount", sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column("odds", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "result",
            postgresql.ENUM("WIN", "LOSS", "PUSH", "PENDING", "CANCELLED", name="betresult"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("payout", sa.NUMERIC(), autoincrement=False, nullable=True),
        sa.Column("notes", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("prop_description", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("prop_line", sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column("over_under", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("actual_value", sa.NUMERIC(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("team_bets_pkey")),
    )
    op.create_table(
        "player_bets",
        sa.Column(
            "bet_type",
            postgresql.ENUM(
                "PLAYER_PROP", "TEAM_PROP", "GAME_TOTAL", "SPREAD", "MONEYLINE", name="bettype"
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("game_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("team", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("opponent", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("wager_amount", sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column("odds", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "result",
            postgresql.ENUM("WIN", "LOSS", "PUSH", "PENDING", "CANCELLED", name="betresult"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("payout", sa.NUMERIC(), autoincrement=False, nullable=True),
        sa.Column("notes", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("player_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "prop_type",
            postgresql.ENUM(
                "POINTS",
                "REBOUNDS",
                "ASSISTS",
                "THREE_POINTERS",
                "STEALS",
                "BLOCKS",
                "TURNOVERS",
                "FIELD_GOALS_MADE",
                "FREE_THROWS_MADE",
                "DOUBLE_DOUBLE",
                "TRIPLE_DOUBLE",
                name="proptype",
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("prop_line", sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column("over_under", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("actual_value", sa.NUMERIC(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("player_bets_pkey")),
    )
    op.drop_table("bets")
    # ### end Alembic commands ###
