name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths: [ 'backend/**', '.github/workflows/backend-ci.yml' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'backend/**', '.github/workflows/backend-ci.yml' ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('backend/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      working-directory: backend
      run: |
        uv venv --python 3.13
        uv pip install -r requirements-dev.txt

    - name: Lint with ruff
      working-directory: backend
      run: uv run ruff check .

    - name: Format check with ruff
      working-directory: backend
      run: uv run ruff format --check .

    - name: Type check with ty
      working-directory: backend
      run: uv run ty .

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nba_bets_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('backend/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      working-directory: backend
      run: |
        uv venv --python 3.13
        uv pip install -r requirements-dev.txt

    - name: Test with pytest
      working-directory: backend
      env:
        POSTGRES_SERVER: localhost
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: nba_bets_test
        POSTGRES_PORT: 5432
      run: uv run pytest --cov=app --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
      with:
        file: backend/coverage.xml
        flags: backend
        name: backend-coverage
